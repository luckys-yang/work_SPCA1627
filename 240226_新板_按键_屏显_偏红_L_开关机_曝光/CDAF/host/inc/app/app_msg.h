/**************************************************************************
 *         Copyright(c) 2010 by i-Catch Technology Co., Ltd.              *
 *                                                                        *
 *  This software is copyrighted by and is the property of i-Catch Tech-  *
 *  nology Co., Ltd. All rights are reserved by i-Catch Technology Co.,   *
 *  Ltd. This software may only be used in accordance with the            *
 *  corresponding license agreement. Any unauthorized use, duplication,   *
 *  distribution, or disclosure of this software is expressly forbidden.  *
 *                                                                        *
 *  This Copyright notice "M U S T" not be removed or modified without    *
 *  prior written consent of i-Catch Technology Co., Ltd.                 *
 *                                                                        *
 *  i-Catch Technology Co., Ltd. reserves the right to modify this        *
 *  software without notice.                                              *
 *                                                                        *
 *  i-Catch Technology Co., Ltd.                                          *
 *  19-1, Innovation First Road, Science-Based Industrial Park,           *
 *  Hsin-Chu, Taiwan, R.O.C.                                              *
 *                                                                        *
 *************************************************************************/
 
/**
 * @file      app_msg.h
 * @brief     message definition for host
 * @author    Phil Lin
 * @since     2010-01-01
 * @date      2010-01-01
*/

#ifndef __APP_MSG_H__
#define __APP_MSG_H__

/**************************************************************************
 *                        H E A D E R   F I L E S
 **************************************************************************/
#include "os_msg.h" 
#include "host_func_opt.h"
/**************************************************************************
 *                           C O N S T A N T S                            *
 **************************************************************************/
 
/**************************************************************************
 *                              M A C R O S                               *
 **************************************************************************/
 
/**************************************************************************
 *                          D A T A    T Y P E S                          *
 **************************************************************************/

typedef enum {
	SP1K_MSG_START_HOST = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0000, //0x0000
	
	/* mode switch msg */
	
	SP1K_MSG_STATE_INIT 			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0001,//0x0001
	SP1K_MSG_STATE_TO_POWER_ON		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0002,//0x0002
	SP1K_MSG_STATE_TO_STILL_VIEW	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0003,//0x0003
	SP1K_MSG_STATE_TO_VIDEO_VIEW	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0004,//0x0004 
	SP1K_MSG_STATE_TO_AUDIO_REC 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0005,//0x0005
	SP1K_MSG_STATE_TO_STILL_PLAY	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0006,//0x0006 
	SP1K_MSG_STATE_TO_MULTI_PLAY	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0007,//0x0007 
	SP1K_MSG_STATE_TO_VIDEO_PLAY	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0008,//0x0008
	SP1K_MSG_STATE_TO_AUDIO_PLAY	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0009,//0x0009
	SP1K_MSG_STATE_TO_MENU			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000a,//0x000a 
	SP1K_MSG_STATE_TO_USB			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000b,//0x000b 
	SP1K_MSG_STATE_TO_SLIDE_SHOW	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000c,//0x000c 
	SP1K_MSG_STATE_TO_PAN_SHOW		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000d,//0x000d 
	SP1K_MSG_STATE_TO_DPS			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000e,//0x000e
	SP1K_MSG_STATE_TO_IDLE			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x000f,//0x000f
	SP1K_MSG_STATE_TO_POWER_OFF		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0010,//0x0010
	SP1K_MSG_STATE_MAX				= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0011,//0x0011

	/* GPIO msg */
	
	SP1K_MSG_CARD_PLUG_IN  	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0400,//0x0400
	SP1K_MSG_CARD_PLUG_OUT 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0401,//0x0401 
	SP1K_MSG_USB_PLUG_IN   	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0402,//0x0402 
	SP1K_MSG_USB_PLUG_OUT  	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0403,//0x0403 
	SP1K_MSG_TV_PLUG_IN    	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0404,//0x0404 
	SP1K_MSG_TV_PLUG_OUT   	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0405,//0x0405
	SP1K_MSG_BAT_LV_UPDATE 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0406,//0x0406
	SP1K_MSG_BAT_EMPTY     	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0407,//0x0407
	SP1K_MSG_HDMI_PLUG_IN 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0408,//0x0408 
	SP1K_MSG_HDMI_PLUG_OUT	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0409,//0x0409
	SP1K_MSG_CHG_BATTERY_FULL	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040a,//0x040a
	SP1K_MSG_CHG_BATTERY_SHORT	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040b,//0x040b
	SP1K_MSG_UPDATE_AF_WINDOW 	=  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040c,//0x040c
	
	#if SUPPORT_AF
	SP1K_MSG_SYS_AF_START =  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040d,//0x040d
	SP1K_MSG_SYS_AF_CAL =  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040e,//0x040e
	SP1K_MSG_SYS_AF_SUCCESS =  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x040f,//0x040f
	SP1K_MSG_SYS_AF_FAIL =  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0410,//0x0410
	#endif

	
	SP1K_MSG_SYS_AF_BACK_FAR =  ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0411,//0x0410
	#if SUPPORT_RTC_OSD_UPDATE
	SP1K_MSG_UPDATE_RTCTIME = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0412,//0x0411
	#endif
	/* power msg */
	
	SP1K_MSG_POWER_ON  	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0600,//0x0600
	SP1K_MSG_POWER_OFF 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0601,//0x0601
	SP1K_MSG_SHUT_DOWN 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0602,//0x0602
	SP1K_MSG_ENTER_SUSPEND 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0603,//0x0603


	/*TP msg*/
	SP1K_MSG_TP_MODE_SWITCH = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0700,//0x0700
	SP1K_MSG_TP_S2 			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0701,//0x0701
	SP1K_MSG_TP_MENU		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0702,//0x0702
	SP1K_MSG_TP_UP 			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0703,//0x0703
	SP1K_MSG_TP_DOWN 		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0704,//0x0704
	SP1K_MSG_TP_LEFT 		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0705,//0x0705
	SP1K_MSG_TP_RIGHT		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0706,//0x0706
	SP1K_MSG_TP_OK 			= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0707,//0x0707
	SP1K_MSG_TP_TELE 		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0708,//0x0708	
	SP1K_MSG_TP_WIDE		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0709,//0x0709	
	SP1K_MSG_TP_HIT		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x070A,//0x070A	
	SP1K_MSG_TP_CAL_COMPLETE= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x070B,//0x070B
	SP1K_MSG_TP_MAX		= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x070F,//0x070F	
	/* disk msg */
	
	SP1K_MSG_CARD_ERROR       	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a00,//0x0a00
	SP1K_MSG_NAND_ERROR       	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a01,//0x0a01
	SP1K_MSG_CARD_NOT_SUPPORT 	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a02,//0x0a02
	SP1K_MSG_CARD_DCFFOLDER_FULL = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a03,//0x0a03

	#if SUPPORT_PANEL_PROTECT
	SP1K_MSG_PANEL_PROTECT	= ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a04,//0x0a04
	SP1K_MSG_SYS_CLOSE_LCD_BACKLIGHT = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a05,//0x0a05
	SP1K_MSG_SYS_OPEN_LCD_BACKLIGHT = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a06,//0x0a06
	#endif

	SP1K_MSG_SYS_QUICK_DELETE = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a07,//0x0a07
	SP1K_MSG_Adjust_Macro  = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a08,//0x0a08

	#if SUPPORT_AWB_ADJ
	SP1K_MSG_AWB_CHECK  = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a09,//0x0a09
	SP1K_MSG_AWB_OFF  = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a0a,//0x0a0a
	#endif
	
	SP1K_MSG_Version_Show = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a0b,//0x0a0a
	SP1K_MSG_Version_Clear = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0a0c,//0x0a0a
		
	/* unknown msg */ 
	SP1K_MSG_UNKNOWN_HOST = ((UINT16)MSG_CTRL_TYPE_HOST << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0fff,//0x0fff
} appMsgList_t;


typedef enum btnMsgList_e {
	SP1K_MSG_START_BTN = ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0000, //0x1000

	/* ui key msg */	
	
	SP1K_MSG_KEY_PRESS_S1    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0100,//0x1100
	SP1K_MSG_KEY_PRESS_S2    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0101,//0x1101
	SP1K_MSG_KEY_PRESS_MENU  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0102,//0x1102
	SP1K_MSG_KEY_PRESS_UP    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0103,//0x1103
	SP1K_MSG_KEY_PRESS_DOWN  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0104,//0x1104 
	SP1K_MSG_KEY_PRESS_LEFT  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0105,//0x1105
	SP1K_MSG_KEY_PRESS_RIGHT 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0106,//0x1106 
	SP1K_MSG_KEY_PRESS_OK    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0107,//0x1107 
	SP1K_MSG_KEY_PRESS_TELE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0108,//0x1108
	SP1K_MSG_KEY_PRESS_WIDE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0109,//0x1109
	SP1K_MSG_KEY_PRESS_DISP  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010a,//0x110a 
	SP1K_MSG_KEY_PRESS_F1    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010b,//0x110b 
	SP1K_MSG_KEY_PRESS_F2    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010c,//0x110c 
	SP1K_MSG_KEY_PRESS_PB    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010d,//0x110d 
	SP1K_MSG_KEY_PRESS_POWER 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010e,//0x110e
	SP1K_MSG_KEY_PRESS_MODE 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x010f,//0x110F
	SP1K_MSG_KEY_PRESS_SNAP 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0110,//0x1110
	SP1K_MSG_KEY_PRESS_SENSOR 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0111,//0x1111
	SP1K_MSG_KEY_PRESS_AF	 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0112,//0x1111
	SP1K_MSG_KEY_PRESS_ZOOM_IN 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0113,//0x1111
	SP1K_MSG_KEY_PRESS_ZOOM_OUT = ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0114,//0x1111
	SP1K_MSG_KEY_PRESS_BURST	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0115,//0x1111
	SP1K_MSG_KEY_PRESS_BACK		= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0116,
	SP1K_MSG_KEY_PRESS_MAX   	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x01ff,//0x110f~0x11ff
	
	SP1K_MSG_KEY_RELEASE_S1    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0200,//0x1200
	SP1K_MSG_KEY_RELEASE_S2    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0201,//0x1201
	SP1K_MSG_KEY_RELEASE_MENU  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0202,//0x1202
	SP1K_MSG_KEY_RELEASE_UP    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0203,//0x1203
	SP1K_MSG_KEY_RELEASE_DOWN  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0204,//0x1204
	SP1K_MSG_KEY_RELEASE_LEFT  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0205,//0x1205
	SP1K_MSG_KEY_RELEASE_RIGHT 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0206,//0x1206
	SP1K_MSG_KEY_RELEASE_OK    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0207,//0x1207
	SP1K_MSG_KEY_RELEASE_TELE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0208,//0x1208
	SP1K_MSG_KEY_RELEASE_WIDE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0209,//0x1209
	SP1K_MSG_KEY_RELEASE_DISP  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020a,//0x120a
	SP1K_MSG_KEY_RELEASE_F1    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020b,//0x120b
	SP1K_MSG_KEY_RELEASE_F2    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020c,//0x120c
	SP1K_MSG_KEY_RELEASE_PB    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020d,//0x120d
	SP1K_MSG_KEY_RELEASE_POWER 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020e,//0x120e
	SP1K_MSG_KEY_RELEASE_MODE 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x020F,//0x120F
	SP1K_MSG_KEY_RELEASE_SNAP 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0210,//0x1210
	SP1K_MSG_KEY_RELEASE_SENSOR = ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0211,//0x1210
	SP1K_MSG_KEY_RELEASE_AF 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0212,//0x1210
	SP1K_MSG_KEY_RELEASE_ZOOM_IN = ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0213,//0x1210
	SP1K_MSG_KEY_RELEASE_ZOOM_OUT = ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0214,//0x1210
	SP1K_MSG_KEY_RELEASE_BURST	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0215,//0x1210
	SP1K_MSG_KEY_RELEASE_BACK	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0216,
	SP1K_MSG_KEY_RELEASE_MAX   	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0217,//0x1211~0x12ff
	
	SP1K_MSG_KEY_REPEATE_UP    	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0300,//0x1300 
	SP1K_MSG_KEY_REPEATE_DOWN  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0301,//0x1301 
	SP1K_MSG_KEY_REPEATE_LEFT  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0302,//0x1302 
	SP1K_MSG_KEY_REPEATE_RIGHT 	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0303,//0x1303 
	SP1K_MSG_KEY_REPEATE_TELE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0304,//0x1304 
	SP1K_MSG_KEY_REPEATE_WIDE  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0305,//0x1305
	SP1K_MSG_KEY_REPEATE_PB  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0306,//0x1306
	SP1K_MSG_KEY_REPEATE_POWER  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0307,//0x1307
	SP1K_MSG_KEY_REPEATE_MENU  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0308,//0x1308
	SP1K_MSG_KEY_REPEATE_SNAP  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0309,//0x1309
	SP1K_MSG_KEY_REPEATE_SENSOR  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030a,//0x1309
	SP1K_MSG_KEY_REPEATE_AF  		= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030b,//0x1309
	SP1K_MSG_KEY_REPEATE_ZOOM_IN  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030c,//0x1309
	SP1K_MSG_KEY_REPEATE_ZOOM_OUT  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030d,//0x1309
	SP1K_MSG_KEY_REPEATE_BURST  	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030e,//0x1309
	SP1K_MSG_KEY_REPEATE_BACK		= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x030f,
	SP1K_MSG_KEY_REPEATE_MAX   	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0310,//0x130a~0x13ff

	SP1K_MSG_KEY_MAX           	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0400,//0x1400~0x1fff

	SP1K_MSG_UNKNOWN_BTN       	= ((UINT16)MSG_CTRL_TYPE_BTN << MSG_CTRL_IDX_GROUP_SHIFT) | 0x0fff,//0x1fff
} btnMsgList_t;
 
/**************************************************************************
 *                         G L O B A L    D A T A                         *
 **************************************************************************/
 
/**************************************************************************
 *                 E X T E R N A L    R E F E R E N C E S                 *
 **************************************************************************/
 
/**************************************************************************
 *               F U N C T I O N    D E C L A R A T I O N S               *
 **************************************************************************/

#endif  /* __APP_MSG_H__ */

